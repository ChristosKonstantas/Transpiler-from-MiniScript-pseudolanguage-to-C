Terminals unused in grammar

   KW_BREAK
   KW_CONTINUE
   KW_NULL
   STRING_SIMPLE


State 82 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 162 conflicts: 13 shift/reduce
State 254 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | start_condition

    3 start_condition: variable_declaration
    4                | constant_declaration
    5                | function_declaration
    6                | KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'

    7 types: KW_NUMBER
    8      | KW_BOOLEAN
    9      | KW_VOID
   10      | KW_STRING

   11 variable_declaration: KW_VAR varList ':' types ';'
   12                     | KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | KW_VAR varList ':' types ';' start_condition
   14                     | KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition

   16 varList: vars1
   17        | vars1 ',' varList
   18        | IDENT '[' ']'
   19        | IDENT '[' POS_NUM ']'

   20 vars1: IDENT
   21      | IDENT '=' vars2

   22 vars2: REAL
   23      | POS_NUM
   24      | NEG_NUM
   25      | CONST_STRING

   26 varsCont: KW_VAR varList ':' types ';' body
   27         | KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

   29 constant_declaration: KW_CONST constList ':' types ';'
   30                     | KW_CONST constList ':' types ',' constList ':' types
   31                     | KW_CONST constList ':' types ';' start_condition
   32                     | KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition

   34 constList: consts1
   35          | consts1 ',' constList

   36 consts1: IDENT '=' consts2
   37        | IDENT '[' ']' '=' consts2
   38        | IDENT '[' POS_NUM ']' '=' consts2

   39 consts2: REAL
   40        | POS_NUM
   41        | NEG_NUM
   42        | CONST_STRING

   43 constsCont: KW_CONST constList ':' types ';' body
   44           | KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

   48 function_parameters: IDENT ':' types
   49                    | IDENT ':' types ',' function_parameters
   50                    | %empty

   51 returnStatement: KW_RETURN ';' body
   52                | KW_RETURN expr ';' body

   53 expr: POS_NUM
   54     | REAL
   55     | IDENT
   56     | NEG_NUM
   57     | KW_TRUE
   58     | KW_FALSE
   59     | CONST_STRING
   60     | POS_NUM expr
   61     | NEG_NUM expr
   62     | REAL expr
   63     | CONST_STRING expr
   64     | '(' expr ')'
   65     | '[' expr ']'
   66     | expr '+' expr
   67     | expr '-' expr
   68     | expr '*' expr
   69     | expr '/' expr
   70     | expr '%' expr
   71     | expr TK_POW expr
   72     | expr '<' expr
   73     | expr '>' expr
   74     | expr TK_EQUAL expr
   75     | expr TK_NEQUAL expr
   76     | expr TK_LEQUAL expr
   77     | KW_NOT expr
   78     | expr KW_AND expr
   79     | expr KW_OR expr

   80 stmt_expr: expr
   81          | IDENT expr

   82 statements: ifStatement
   83           | whileStatement
   84           | forStatement
   85           | functionCall
   86           | assignmentStatement
   87           | returnStatement

   88 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | ifStatement KW_ELSE '{' statements '}' ';' body

   91 whileStatement: KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body

   92 functionCall: IDENT '(' functionCall_parameters ')' ';' body

   93 functionCall_parameters: stmt_expr
   94                        | stmt_expr ',' functionCall_parameters
   95                        | %empty

   96 assignmentStatement: IDENT '=' expr ';' body
   97                    | IDENT '=' functionCall
   98                    | IDENT '=' expr '+' functionCall
   99                    | IDENT '=' expr '-' functionCall
  100                    | IDENT '=' expr '*' functionCall
  101                    | IDENT '=' expr '/' functionCall
  102                    | IDENT '=' expr '%' functionCall
  103                    | IDENT '=' expr TK_POW functionCall

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

  105 body: varsCont
  106     | constsCont
  107     | statements
  108     | %empty


Terminals, with rules where they appear

$end (0) 0
'%' (37) 70 102
'(' (40) 6 46 47 64 88 89 91 92 104
')' (41) 6 46 47 64 88 89 91 92 104
'*' (42) 68 100
'+' (43) 66 98
',' (44) 12 14 17 27 30 32 35 44 49 94
'-' (45) 67 99
'/' (47) 69 101
':' (58) 6 11 12 13 14 15 26 27 28 29 30 31 32 33 43 44 45 46 47 48
    49
';' (59) 11 12 13 14 15 26 27 28 29 31 32 33 43 44 45 46 47 51 52 88
    89 90 91 92 96 104
'<' (60) 72
'=' (61) 15 21 28 33 36 37 38 45 96 97 98 99 100 101 102 103
'>' (62) 73
'[' (91) 15 18 19 28 33 37 38 45 65
']' (93) 15 18 19 28 33 37 38 45 65
'{' (123) 6 46 47 88 89 90 91 104
'}' (125) 6 46 47 88 89 90 91 104
error (256)
IDENT (258) 15 18 19 20 21 28 33 36 37 38 45 46 47 48 49 55 81 92 96
    97 98 99 100 101 102 103
REAL (259) 22 39 54 62
CONST_STRING (260) 15 25 28 33 42 45 59 63
POS_NUM (261) 15 19 23 28 33 38 40 45 53 60
NEG_NUM (262) 24 41 56 61
KW_NUMBER (263) 7
KW_BOOLEAN (264) 8
KW_STRING (265) 10
KW_VOID (266) 6 9
KW_TRUE (267) 57
KW_FALSE (268) 58
KW_VAR (269) 11 12 13 14 15 26 27 28
KW_CONST (270) 29 30 31 32 33 43 44 45
KW_IF (271) 88 89
KW_ELSE (272) 89 90
KW_FOR (273) 104
KW_WHILE (274) 91
KW_FUNCTION (275) 6 46 47
KW_BREAK (276)
KW_CONTINUE (277)
KW_RETURN (278) 51 52
KW_NULL (279)
KW_START (280) 6
KW_NOT (281) 77
TK_POW (282) 71 103
STRING_SIMPLE (283)
TK_EQUAL (284) 74
TK_NEQUAL (285) 75
TK_LEQUAL (286) 76
KW_AND (287) 78
KW_OR (288) 79


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0
start_condition (53)
    on left: 3 4 5 6, on right: 2 13 14 15 31 32 33 47
types (54)
    on left: 7 8 9 10, on right: 11 12 13 14 15 26 27 28 29 30 31 32
    33 43 44 45 46 47 48 49
variable_declaration (55)
    on left: 11 12 13 14 15, on right: 3
varList (56)
    on left: 16 17 18 19, on right: 11 12 13 14 17 26 27
vars1 (57)
    on left: 20 21, on right: 16 17
vars2 (58)
    on left: 22 23 24 25, on right: 21
varsCont (59)
    on left: 26 27 28, on right: 105
constant_declaration (60)
    on left: 29 30 31 32 33, on right: 4
constList (61)
    on left: 34 35, on right: 29 30 31 32 35 43 44
consts1 (62)
    on left: 36 37 38, on right: 34 35
consts2 (63)
    on left: 39 40 41 42, on right: 36 37 38
constsCont (64)
    on left: 43 44 45, on right: 106
function_declaration (65)
    on left: 46 47, on right: 5
function_parameters (66)
    on left: 48 49 50, on right: 46 47 49
returnStatement (67)
    on left: 51 52, on right: 87
expr (68)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79, on right: 52 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76 77 78 79 80 81 96 98 99 100 101 102
    103
stmt_expr (69)
    on left: 80 81, on right: 88 89 91 93 94 104
statements (70)
    on left: 82 83 84 85 86 87, on right: 88 89 90 91 104 107
ifStatement (71)
    on left: 88 89 90, on right: 82 90
whileStatement (72)
    on left: 91, on right: 83
functionCall (73)
    on left: 92, on right: 85 97 98 99 100 101 102 103
functionCall_parameters (74)
    on left: 93 94 95, on right: 92 94
assignmentStatement (75)
    on left: 96 97 98 99 100 101 102 103, on right: 86 104
forStatement (76)
    on left: 104, on right: 84
body (77)
    on left: 105 106 107 108, on right: 6 26 27 28 43 44 45 46 47 51
    52 88 89 90 91 92 96 104


State 0

    0 $accept: . program $end
    1 program: . %empty  [$end]
    2        | . start_condition
    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    $default  reduce using rule 1 (program)

    program               go to state 4
    start_condition       go to state 5
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 1

   11 variable_declaration: KW_VAR . varList ':' types ';'
   12                     | KW_VAR . varList ':' types ',' varList ':' types ';'
   13                     | KW_VAR . varList ':' types ';' start_condition
   14                     | KW_VAR . varList ':' types ',' varList ':' types ';' start_condition
   15                     | KW_VAR . IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   16 varList: . vars1
   17        | . vars1 ',' varList
   18        | . IDENT '[' ']'
   19        | . IDENT '[' POS_NUM ']'
   20 vars1: . IDENT
   21      | . IDENT '=' vars2

    IDENT  shift, and go to state 9

    varList  go to state 10
    vars1    go to state 11


State 2

   29 constant_declaration: KW_CONST . constList ':' types ';'
   30                     | KW_CONST . constList ':' types ',' constList ':' types
   31                     | KW_CONST . constList ':' types ';' start_condition
   32                     | KW_CONST . constList ':' types ',' constList ':' types ';' start_condition
   33                     | KW_CONST . IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   34 constList: . consts1
   35          | . consts1 ',' constList
   36 consts1: . IDENT '=' consts2
   37        | . IDENT '[' ']' '=' consts2
   38        | . IDENT '[' POS_NUM ']' '=' consts2

    IDENT  shift, and go to state 12

    constList  go to state 13
    consts1    go to state 14


State 3

    6 start_condition: KW_FUNCTION . KW_START '(' ')' ':' KW_VOID '{' body '}'
   46 function_declaration: KW_FUNCTION . IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | KW_FUNCTION . IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    IDENT     shift, and go to state 15
    KW_START  shift, and go to state 16


State 4

    0 $accept: program . $end

    $end  shift, and go to state 17


State 5

    2 program: start_condition .

    $default  reduce using rule 2 (program)


State 6

    3 start_condition: variable_declaration .

    $default  reduce using rule 3 (start_condition)


State 7

    4 start_condition: constant_declaration .

    $default  reduce using rule 4 (start_condition)


State 8

    5 start_condition: function_declaration .

    $default  reduce using rule 5 (start_condition)


State 9

   15 variable_declaration: KW_VAR IDENT . '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   18 varList: IDENT . '[' ']'
   19        | IDENT . '[' POS_NUM ']'
   20 vars1: IDENT .  [',', ':']
   21      | IDENT . '=' vars2

    '['  shift, and go to state 18
    '='  shift, and go to state 19

    $default  reduce using rule 20 (vars1)


State 10

   11 variable_declaration: KW_VAR varList . ':' types ';'
   12                     | KW_VAR varList . ':' types ',' varList ':' types ';'
   13                     | KW_VAR varList . ':' types ';' start_condition
   14                     | KW_VAR varList . ':' types ',' varList ':' types ';' start_condition

    ':'  shift, and go to state 20


State 11

   16 varList: vars1 .  [':']
   17        | vars1 . ',' varList

    ','  shift, and go to state 21

    $default  reduce using rule 16 (varList)


State 12

   33 constant_declaration: KW_CONST IDENT . '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   36 consts1: IDENT . '=' consts2
   37        | IDENT . '[' ']' '=' consts2
   38        | IDENT . '[' POS_NUM ']' '=' consts2

    '['  shift, and go to state 22
    '='  shift, and go to state 23


State 13

   29 constant_declaration: KW_CONST constList . ':' types ';'
   30                     | KW_CONST constList . ':' types ',' constList ':' types
   31                     | KW_CONST constList . ':' types ';' start_condition
   32                     | KW_CONST constList . ':' types ',' constList ':' types ';' start_condition

    ':'  shift, and go to state 24


State 14

   34 constList: consts1 .  [':']
   35          | consts1 . ',' constList

    ','  shift, and go to state 25

    $default  reduce using rule 34 (constList)


State 15

   46 function_declaration: KW_FUNCTION IDENT . '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT . '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    '('  shift, and go to state 26


State 16

    6 start_condition: KW_FUNCTION KW_START . '(' ')' ':' KW_VOID '{' body '}'

    '('  shift, and go to state 27


State 17

    0 $accept: program $end .

    $default  accept


State 18

   15 variable_declaration: KW_VAR IDENT '[' . POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   18 varList: IDENT '[' . ']'
   19        | IDENT '[' . POS_NUM ']'

    POS_NUM  shift, and go to state 28
    ']'      shift, and go to state 29


State 19

   21 vars1: IDENT '=' . vars2
   22 vars2: . REAL
   23      | . POS_NUM
   24      | . NEG_NUM
   25      | . CONST_STRING

    REAL          shift, and go to state 30
    CONST_STRING  shift, and go to state 31
    POS_NUM       shift, and go to state 32
    NEG_NUM       shift, and go to state 33

    vars2  go to state 34


State 20

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   11 variable_declaration: KW_VAR varList ':' . types ';'
   12                     | KW_VAR varList ':' . types ',' varList ':' types ';'
   13                     | KW_VAR varList ':' . types ';' start_condition
   14                     | KW_VAR varList ':' . types ',' varList ':' types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 39


State 21

   16 varList: . vars1
   17        | . vars1 ',' varList
   17        | vars1 ',' . varList
   18        | . IDENT '[' ']'
   19        | . IDENT '[' POS_NUM ']'
   20 vars1: . IDENT
   21      | . IDENT '=' vars2

    IDENT  shift, and go to state 40

    varList  go to state 41
    vars1    go to state 11


State 22

   33 constant_declaration: KW_CONST IDENT '[' . POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   37 consts1: IDENT '[' . ']' '=' consts2
   38        | IDENT '[' . POS_NUM ']' '=' consts2

    POS_NUM  shift, and go to state 42
    ']'      shift, and go to state 43


State 23

   36 consts1: IDENT '=' . consts2
   39 consts2: . REAL
   40        | . POS_NUM
   41        | . NEG_NUM
   42        | . CONST_STRING

    REAL          shift, and go to state 44
    CONST_STRING  shift, and go to state 45
    POS_NUM       shift, and go to state 46
    NEG_NUM       shift, and go to state 47

    consts2  go to state 48


State 24

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   29 constant_declaration: KW_CONST constList ':' . types ';'
   30                     | KW_CONST constList ':' . types ',' constList ':' types
   31                     | KW_CONST constList ':' . types ';' start_condition
   32                     | KW_CONST constList ':' . types ',' constList ':' types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 49


State 25

   34 constList: . consts1
   35          | . consts1 ',' constList
   35          | consts1 ',' . constList
   36 consts1: . IDENT '=' consts2
   37        | . IDENT '[' ']' '=' consts2
   38        | . IDENT '[' POS_NUM ']' '=' consts2

    IDENT  shift, and go to state 50

    constList  go to state 51
    consts1    go to state 14


State 26

   46 function_declaration: KW_FUNCTION IDENT '(' . function_parameters ')' ':' types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' . function_parameters ')' ':' types '{' body '}' ';' start_condition
   48 function_parameters: . IDENT ':' types
   49                    | . IDENT ':' types ',' function_parameters
   50                    | . %empty  [')']

    IDENT  shift, and go to state 52

    $default  reduce using rule 50 (function_parameters)

    function_parameters  go to state 53


State 27

    6 start_condition: KW_FUNCTION KW_START '(' . ')' ':' KW_VOID '{' body '}'

    ')'  shift, and go to state 54


State 28

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM . ']' '=' CONST_STRING ':' types ';' start_condition
   19 varList: IDENT '[' POS_NUM . ']'

    ']'  shift, and go to state 55


State 29

   18 varList: IDENT '[' ']' .

    $default  reduce using rule 18 (varList)


State 30

   22 vars2: REAL .

    $default  reduce using rule 22 (vars2)


State 31

   25 vars2: CONST_STRING .

    $default  reduce using rule 25 (vars2)


State 32

   23 vars2: POS_NUM .

    $default  reduce using rule 23 (vars2)


State 33

   24 vars2: NEG_NUM .

    $default  reduce using rule 24 (vars2)


State 34

   21 vars1: IDENT '=' vars2 .

    $default  reduce using rule 21 (vars1)


State 35

    7 types: KW_NUMBER .

    $default  reduce using rule 7 (types)


State 36

    8 types: KW_BOOLEAN .

    $default  reduce using rule 8 (types)


State 37

   10 types: KW_STRING .

    $default  reduce using rule 10 (types)


State 38

    9 types: KW_VOID .

    $default  reduce using rule 9 (types)


State 39

   11 variable_declaration: KW_VAR varList ':' types . ';'
   12                     | KW_VAR varList ':' types . ',' varList ':' types ';'
   13                     | KW_VAR varList ':' types . ';' start_condition
   14                     | KW_VAR varList ':' types . ',' varList ':' types ';' start_condition

    ','  shift, and go to state 56
    ';'  shift, and go to state 57


State 40

   18 varList: IDENT . '[' ']'
   19        | IDENT . '[' POS_NUM ']'
   20 vars1: IDENT .  [',', ':']
   21      | IDENT . '=' vars2

    '['  shift, and go to state 58
    '='  shift, and go to state 19

    $default  reduce using rule 20 (vars1)


State 41

   17 varList: vars1 ',' varList .

    $default  reduce using rule 17 (varList)


State 42

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM . ']' '=' CONST_STRING ':' types ';' start_condition
   38 consts1: IDENT '[' POS_NUM . ']' '=' consts2

    ']'  shift, and go to state 59


State 43

   37 consts1: IDENT '[' ']' . '=' consts2

    '='  shift, and go to state 60


State 44

   39 consts2: REAL .

    $default  reduce using rule 39 (consts2)


State 45

   42 consts2: CONST_STRING .

    $default  reduce using rule 42 (consts2)


State 46

   40 consts2: POS_NUM .

    $default  reduce using rule 40 (consts2)


State 47

   41 consts2: NEG_NUM .

    $default  reduce using rule 41 (consts2)


State 48

   36 consts1: IDENT '=' consts2 .

    $default  reduce using rule 36 (consts1)


State 49

   29 constant_declaration: KW_CONST constList ':' types . ';'
   30                     | KW_CONST constList ':' types . ',' constList ':' types
   31                     | KW_CONST constList ':' types . ';' start_condition
   32                     | KW_CONST constList ':' types . ',' constList ':' types ';' start_condition

    ','  shift, and go to state 61
    ';'  shift, and go to state 62


State 50

   36 consts1: IDENT . '=' consts2
   37        | IDENT . '[' ']' '=' consts2
   38        | IDENT . '[' POS_NUM ']' '=' consts2

    '['  shift, and go to state 63
    '='  shift, and go to state 23


State 51

   35 constList: consts1 ',' constList .

    $default  reduce using rule 35 (constList)


State 52

   48 function_parameters: IDENT . ':' types
   49                    | IDENT . ':' types ',' function_parameters

    ':'  shift, and go to state 64


State 53

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters . ')' ':' types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters . ')' ':' types '{' body '}' ';' start_condition

    ')'  shift, and go to state 65


State 54

    6 start_condition: KW_FUNCTION KW_START '(' ')' . ':' KW_VOID '{' body '}'

    ':'  shift, and go to state 66


State 55

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' . '=' CONST_STRING ':' types ';' start_condition
   19 varList: IDENT '[' POS_NUM ']' .  [':']

    '='  shift, and go to state 67

    $default  reduce using rule 19 (varList)


State 56

   12 variable_declaration: KW_VAR varList ':' types ',' . varList ':' types ';'
   14                     | KW_VAR varList ':' types ',' . varList ':' types ';' start_condition
   16 varList: . vars1
   17        | . vars1 ',' varList
   18        | . IDENT '[' ']'
   19        | . IDENT '[' POS_NUM ']'
   20 vars1: . IDENT
   21      | . IDENT '=' vars2

    IDENT  shift, and go to state 40

    varList  go to state 68
    vars1    go to state 11


State 57

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   11                     | KW_VAR varList ':' types ';' .  [$end]
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   13                     | KW_VAR varList ':' types ';' . start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    $default  reduce using rule 11 (variable_declaration)

    start_condition       go to state 69
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 58

   18 varList: IDENT '[' . ']'
   19        | IDENT '[' . POS_NUM ']'

    POS_NUM  shift, and go to state 70
    ']'      shift, and go to state 29


State 59

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' . '=' CONST_STRING ':' types ';' start_condition
   38 consts1: IDENT '[' POS_NUM ']' . '=' consts2

    '='  shift, and go to state 71


State 60

   37 consts1: IDENT '[' ']' '=' . consts2
   39 consts2: . REAL
   40        | . POS_NUM
   41        | . NEG_NUM
   42        | . CONST_STRING

    REAL          shift, and go to state 44
    CONST_STRING  shift, and go to state 45
    POS_NUM       shift, and go to state 46
    NEG_NUM       shift, and go to state 47

    consts2  go to state 72


State 61

   30 constant_declaration: KW_CONST constList ':' types ',' . constList ':' types
   32                     | KW_CONST constList ':' types ',' . constList ':' types ';' start_condition
   34 constList: . consts1
   35          | . consts1 ',' constList
   36 consts1: . IDENT '=' consts2
   37        | . IDENT '[' ']' '=' consts2
   38        | . IDENT '[' POS_NUM ']' '=' consts2

    IDENT  shift, and go to state 50

    constList  go to state 73
    consts1    go to state 14


State 62

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   29                     | KW_CONST constList ':' types ';' .  [$end]
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   31                     | KW_CONST constList ':' types ';' . start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    $default  reduce using rule 29 (constant_declaration)

    start_condition       go to state 74
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 63

   37 consts1: IDENT '[' . ']' '=' consts2
   38        | IDENT '[' . POS_NUM ']' '=' consts2

    POS_NUM  shift, and go to state 75
    ']'      shift, and go to state 43


State 64

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   48 function_parameters: IDENT ':' . types
   49                    | IDENT ':' . types ',' function_parameters

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 76


State 65

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' . ':' types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' . ':' types '{' body '}' ';' start_condition

    ':'  shift, and go to state 77


State 66

    6 start_condition: KW_FUNCTION KW_START '(' ')' ':' . KW_VOID '{' body '}'

    KW_VOID  shift, and go to state 78


State 67

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' '=' . CONST_STRING ':' types ';' start_condition

    CONST_STRING  shift, and go to state 79


State 68

   12 variable_declaration: KW_VAR varList ':' types ',' varList . ':' types ';'
   14                     | KW_VAR varList ':' types ',' varList . ':' types ';' start_condition

    ':'  shift, and go to state 80


State 69

   13 variable_declaration: KW_VAR varList ':' types ';' start_condition .

    $default  reduce using rule 13 (variable_declaration)


State 70

   19 varList: IDENT '[' POS_NUM . ']'

    ']'  shift, and go to state 81


State 71

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' '=' . CONST_STRING ':' types ';' start_condition
   38 consts1: IDENT '[' POS_NUM ']' '=' . consts2
   39 consts2: . REAL
   40        | . POS_NUM
   41        | . NEG_NUM
   42        | . CONST_STRING

    REAL          shift, and go to state 44
    CONST_STRING  shift, and go to state 82
    POS_NUM       shift, and go to state 46
    NEG_NUM       shift, and go to state 47

    consts2  go to state 83


State 72

   37 consts1: IDENT '[' ']' '=' consts2 .

    $default  reduce using rule 37 (consts1)


State 73

   30 constant_declaration: KW_CONST constList ':' types ',' constList . ':' types
   32                     | KW_CONST constList ':' types ',' constList . ':' types ';' start_condition

    ':'  shift, and go to state 84


State 74

   31 constant_declaration: KW_CONST constList ':' types ';' start_condition .

    $default  reduce using rule 31 (constant_declaration)


State 75

   38 consts1: IDENT '[' POS_NUM . ']' '=' consts2

    ']'  shift, and go to state 85


State 76

   48 function_parameters: IDENT ':' types .  [')']
   49                    | IDENT ':' types . ',' function_parameters

    ','  shift, and go to state 86

    $default  reduce using rule 48 (function_parameters)


State 77

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' . types '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' . types '{' body '}' ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 87


State 78

    6 start_condition: KW_FUNCTION KW_START '(' ')' ':' KW_VOID . '{' body '}'

    '{'  shift, and go to state 88


State 79

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING . ':' types ';' start_condition

    ':'  shift, and go to state 89


State 80

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   12 variable_declaration: KW_VAR varList ':' types ',' varList ':' . types ';'
   14                     | KW_VAR varList ':' types ',' varList ':' . types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 90


State 81

   19 varList: IDENT '[' POS_NUM ']' .

    $default  reduce using rule 19 (varList)


State 82

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING . ':' types ';' start_condition
   42 consts2: CONST_STRING .  [',', ':']

    ':'  shift, and go to state 91

    ':'       [reduce using rule 42 (consts2)]
    $default  reduce using rule 42 (consts2)


State 83

   38 consts1: IDENT '[' POS_NUM ']' '=' consts2 .

    $default  reduce using rule 38 (consts1)


State 84

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   30 constant_declaration: KW_CONST constList ':' types ',' constList ':' . types
   32                     | KW_CONST constList ':' types ',' constList ':' . types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 92


State 85

   38 consts1: IDENT '[' POS_NUM ']' . '=' consts2

    '='  shift, and go to state 93


State 86

   48 function_parameters: . IDENT ':' types
   49                    | . IDENT ':' types ',' function_parameters
   49                    | IDENT ':' types ',' . function_parameters
   50                    | . %empty  [')']

    IDENT  shift, and go to state 52

    $default  reduce using rule 50 (function_parameters)

    function_parameters  go to state 94


State 87

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types . '{' body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types . '{' body '}' ';' start_condition

    '{'  shift, and go to state 95


State 88

    6 start_condition: KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' . body '}'
   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  ['}']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 112


State 89

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' . types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 113


State 90

   12 variable_declaration: KW_VAR varList ':' types ',' varList ':' types . ';'
   14                     | KW_VAR varList ':' types ',' varList ':' types . ';' start_condition

    ';'  shift, and go to state 114


State 91

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' . types ';' start_condition

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 115


State 92

   30 constant_declaration: KW_CONST constList ':' types ',' constList ':' types .  [$end]
   32                     | KW_CONST constList ':' types ',' constList ':' types . ';' start_condition

    ';'  shift, and go to state 116

    $default  reduce using rule 30 (constant_declaration)


State 93

   38 consts1: IDENT '[' POS_NUM ']' '=' . consts2
   39 consts2: . REAL
   40        | . POS_NUM
   41        | . NEG_NUM
   42        | . CONST_STRING

    REAL          shift, and go to state 44
    CONST_STRING  shift, and go to state 45
    POS_NUM       shift, and go to state 46
    NEG_NUM       shift, and go to state 47

    consts2  go to state 83


State 94

   49 function_parameters: IDENT ':' types ',' function_parameters .

    $default  reduce using rule 49 (function_parameters)


State 95

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' . body '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' . body '}' ';' start_condition
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  ['}']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 117


State 96

   92 functionCall: IDENT . '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: IDENT . '=' expr ';' body
   97                    | IDENT . '=' functionCall
   98                    | IDENT . '=' expr '+' functionCall
   99                    | IDENT . '=' expr '-' functionCall
  100                    | IDENT . '=' expr '*' functionCall
  101                    | IDENT . '=' expr '/' functionCall
  102                    | IDENT . '=' expr '%' functionCall
  103                    | IDENT . '=' expr TK_POW functionCall

    '('  shift, and go to state 118
    '='  shift, and go to state 119


State 97

   16 varList: . vars1
   17        | . vars1 ',' varList
   18        | . IDENT '[' ']'
   19        | . IDENT '[' POS_NUM ']'
   20 vars1: . IDENT
   21      | . IDENT '=' vars2
   26 varsCont: KW_VAR . varList ':' types ';' body
   27         | KW_VAR . varList ':' types ',' varList ':' types ';' body
   28         | KW_VAR . IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

    IDENT  shift, and go to state 120

    varList  go to state 121
    vars1    go to state 11


State 98

   34 constList: . consts1
   35          | . consts1 ',' constList
   36 consts1: . IDENT '=' consts2
   37        | . IDENT '[' ']' '=' consts2
   38        | . IDENT '[' POS_NUM ']' '=' consts2
   43 constsCont: KW_CONST . constList ':' types ';' body
   44           | KW_CONST . constList ':' types ',' constList ':' types ';' body
   45           | KW_CONST . IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

    IDENT  shift, and go to state 122

    constList  go to state 123
    consts1    go to state 14


State 99

   88 ifStatement: KW_IF . '(' stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF . '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    '('  shift, and go to state 124


State 100

  104 forStatement: KW_FOR . '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    '('  shift, and go to state 125


State 101

   91 whileStatement: KW_WHILE . '(' stmt_expr ')' '{' statements '}' ';' body

    '('  shift, and go to state 126


State 102

   51 returnStatement: KW_RETURN . ';' body
   52                | KW_RETURN . expr ';' body
   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136
    ';'           shift, and go to state 137

    expr  go to state 138


State 103

  105 body: varsCont .

    $default  reduce using rule 105 (body)


State 104

  106 body: constsCont .

    $default  reduce using rule 106 (body)


State 105

   87 statements: returnStatement .

    $default  reduce using rule 87 (statements)


State 106

  107 body: statements .

    $default  reduce using rule 107 (body)


State 107

   82 statements: ifStatement .  [KW_ELSE, ')', '}', ';']
   90 ifStatement: ifStatement . KW_ELSE '{' statements '}' ';' body

    KW_ELSE  shift, and go to state 139

    KW_ELSE   [reduce using rule 82 (statements)]
    $default  reduce using rule 82 (statements)


State 108

   83 statements: whileStatement .

    $default  reduce using rule 83 (statements)


State 109

   85 statements: functionCall .

    $default  reduce using rule 85 (statements)


State 110

   86 statements: assignmentStatement .

    $default  reduce using rule 86 (statements)


State 111

   84 statements: forStatement .

    $default  reduce using rule 84 (statements)


State 112

    6 start_condition: KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body . '}'

    '}'  shift, and go to state 140


State 113

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types . ';' start_condition

    ';'  shift, and go to state 141


State 114

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   12                     | KW_VAR varList ':' types ',' varList ':' types ';' .  [$end]
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   14                     | KW_VAR varList ':' types ',' varList ':' types ';' . start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    $default  reduce using rule 12 (variable_declaration)

    start_condition       go to state 142
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 115

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types . ';' start_condition

    ';'  shift, and go to state 143


State 116

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   32                     | KW_CONST constList ':' types ',' constList ':' types ';' . start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    start_condition       go to state 144
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 117

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body . '}' ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body . '}' ';' start_condition

    '}'  shift, and go to state 145


State 118

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
   92 functionCall: IDENT '(' . functionCall_parameters ')' ';' body
   93 functionCall_parameters: . stmt_expr
   94                        | . stmt_expr ',' functionCall_parameters
   95                        | . %empty  [')']

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 95 (functionCall_parameters)

    expr                     go to state 147
    stmt_expr                go to state 148
    functionCall_parameters  go to state 149


State 119

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: IDENT '=' . expr ';' body
   97                    | IDENT '=' . functionCall
   98                    | IDENT '=' . expr '+' functionCall
   99                    | IDENT '=' . expr '-' functionCall
  100                    | IDENT '=' . expr '*' functionCall
  101                    | IDENT '=' . expr '/' functionCall
  102                    | IDENT '=' . expr '%' functionCall
  103                    | IDENT '=' . expr TK_POW functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 151
    functionCall  go to state 152


State 120

   18 varList: IDENT . '[' ']'
   19        | IDENT . '[' POS_NUM ']'
   20 vars1: IDENT .  [',', ':']
   21      | IDENT . '=' vars2
   28 varsCont: KW_VAR IDENT . '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

    '['  shift, and go to state 153
    '='  shift, and go to state 19

    $default  reduce using rule 20 (vars1)


State 121

   26 varsCont: KW_VAR varList . ':' types ';' body
   27         | KW_VAR varList . ':' types ',' varList ':' types ';' body

    ':'  shift, and go to state 154


State 122

   36 consts1: IDENT . '=' consts2
   37        | IDENT . '[' ']' '=' consts2
   38        | IDENT . '[' POS_NUM ']' '=' consts2
   45 constsCont: KW_CONST IDENT . '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body

    '['  shift, and go to state 155
    '='  shift, and go to state 23


State 123

   43 constsCont: KW_CONST constList . ':' types ';' body
   44           | KW_CONST constList . ':' types ',' constList ':' types ';' body

    ':'  shift, and go to state 156


State 124

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
   88 ifStatement: KW_IF '(' . stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF '(' . stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr       go to state 147
    stmt_expr  go to state 157


State 125

   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: KW_FOR '(' . assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT  shift, and go to state 158

    assignmentStatement  go to state 159


State 126

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
   91 whileStatement: KW_WHILE '(' . stmt_expr ')' '{' statements '}' ';' body

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr       go to state 147
    stmt_expr  go to state 160


State 127

   55 expr: IDENT .

    $default  reduce using rule 55 (expr)


State 128

   53 expr: . POS_NUM
   54     | . REAL
   54     | REAL .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   62     | REAL . expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 54 (expr)

    expr  go to state 161


State 129

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   59     | CONST_STRING .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   63     | CONST_STRING . expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 59 (expr)

    expr  go to state 162


State 130

   53 expr: . POS_NUM
   53     | POS_NUM .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   60     | POS_NUM . expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 53 (expr)

    expr  go to state 163


State 131

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   56     | NEG_NUM .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   61     | NEG_NUM . expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 56 (expr)

    expr  go to state 164


State 132

   57 expr: KW_TRUE .

    $default  reduce using rule 57 (expr)


State 133

   58 expr: KW_FALSE .

    $default  reduce using rule 58 (expr)


State 134

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   77     | KW_NOT . expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 165


State 135

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   64     | '(' . expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 166


State 136

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   65     | '[' . expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 167


State 137

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   51                | KW_RETURN ';' . body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 168


State 138

   52 returnStatement: KW_RETURN expr . ';' body
   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181
    ';'        shift, and go to state 182


State 139

   90 ifStatement: ifStatement KW_ELSE . '{' statements '}' ';' body

    '{'  shift, and go to state 183


State 140

    6 start_condition: KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}' .

    $default  reduce using rule 6 (start_condition)


State 141

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   15                     | KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' . start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    start_condition       go to state 184
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 142

   14 variable_declaration: KW_VAR varList ':' types ',' varList ':' types ';' start_condition .

    $default  reduce using rule 14 (variable_declaration)


State 143

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   33                     | KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' . start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    start_condition       go to state 185
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 144

   32 constant_declaration: KW_CONST constList ':' types ',' constList ':' types ';' start_condition .

    $default  reduce using rule 32 (constant_declaration)


State 145

   46 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' . ';'
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' . ';' start_condition

    ';'  shift, and go to state 186


State 146

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   55     | IDENT .  ['-', '+', TK_POW, '*', '/', '%', ')', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   81 stmt_expr: IDENT . expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 55 (expr)

    expr  go to state 187


State 147

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr
   80 stmt_expr: expr .  [')', ',', ';']

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 80 (stmt_expr)


State 148

   93 functionCall_parameters: stmt_expr .  [')']
   94                        | stmt_expr . ',' functionCall_parameters

    ','  shift, and go to state 188

    $default  reduce using rule 93 (functionCall_parameters)


State 149

   92 functionCall: IDENT '(' functionCall_parameters . ')' ';' body

    ')'  shift, and go to state 189


State 150

   55 expr: IDENT .  ['-', '+', TK_POW, '*', '/', '%', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ';']
   92 functionCall: IDENT . '(' functionCall_parameters ')' ';' body

    '('  shift, and go to state 118

    $default  reduce using rule 55 (expr)


State 151

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr
   96 assignmentStatement: IDENT '=' expr . ';' body
   98                    | IDENT '=' expr . '+' functionCall
   99                    | IDENT '=' expr . '-' functionCall
  100                    | IDENT '=' expr . '*' functionCall
  101                    | IDENT '=' expr . '/' functionCall
  102                    | IDENT '=' expr . '%' functionCall
  103                    | IDENT '=' expr . TK_POW functionCall

    '-'        shift, and go to state 190
    '+'        shift, and go to state 191
    TK_POW     shift, and go to state 192
    '*'        shift, and go to state 193
    '/'        shift, and go to state 194
    '%'        shift, and go to state 195
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181
    ';'        shift, and go to state 196


State 152

   97 assignmentStatement: IDENT '=' functionCall .

    $default  reduce using rule 97 (assignmentStatement)


State 153

   18 varList: IDENT '[' . ']'
   19        | IDENT '[' . POS_NUM ']'
   28 varsCont: KW_VAR IDENT '[' . POS_NUM ']' '=' CONST_STRING ':' types ';' body

    POS_NUM  shift, and go to state 197
    ']'      shift, and go to state 29


State 154

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   26 varsCont: KW_VAR varList ':' . types ';' body
   27         | KW_VAR varList ':' . types ',' varList ':' types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 198


State 155

   37 consts1: IDENT '[' . ']' '=' consts2
   38        | IDENT '[' . POS_NUM ']' '=' consts2
   45 constsCont: KW_CONST IDENT '[' . POS_NUM ']' '=' CONST_STRING ':' types ';' body

    POS_NUM  shift, and go to state 199
    ']'      shift, and go to state 43


State 156

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   43 constsCont: KW_CONST constList ':' . types ';' body
   44           | KW_CONST constList ':' . types ',' constList ':' types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 200


State 157

   88 ifStatement: KW_IF '(' stmt_expr . ')' '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr . ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    ')'  shift, and go to state 201


State 158

   96 assignmentStatement: IDENT . '=' expr ';' body
   97                    | IDENT . '=' functionCall
   98                    | IDENT . '=' expr '+' functionCall
   99                    | IDENT . '=' expr '-' functionCall
  100                    | IDENT . '=' expr '*' functionCall
  101                    | IDENT . '=' expr '/' functionCall
  102                    | IDENT . '=' expr '%' functionCall
  103                    | IDENT . '=' expr TK_POW functionCall

    '='  shift, and go to state 119


State 159

  104 forStatement: KW_FOR '(' assignmentStatement . ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    ';'  shift, and go to state 202


State 160

   91 whileStatement: KW_WHILE '(' stmt_expr . ')' '{' statements '}' ';' body

    ')'  shift, and go to state 203


State 161

   62 expr: REAL expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 62 (expr)

    Conflict between rule 62 and token '-' resolved as reduce ('-' < REAL).
    Conflict between rule 62 and token '+' resolved as reduce ('+' < REAL).
    Conflict between rule 62 and token TK_POW resolved as reduce (TK_POW < REAL).
    Conflict between rule 62 and token '*' resolved as reduce ('*' < REAL).
    Conflict between rule 62 and token '/' resolved as reduce ('/' < REAL).
    Conflict between rule 62 and token '%' resolved as reduce ('%' < REAL).
    Conflict between rule 62 and token '<' resolved as shift (REAL < '<').
    Conflict between rule 62 and token '>' resolved as shift (REAL < '>').
    Conflict between rule 62 and token TK_EQUAL resolved as shift (REAL < TK_EQUAL).
    Conflict between rule 62 and token TK_NEQUAL resolved as shift (REAL < TK_NEQUAL).
    Conflict between rule 62 and token TK_LEQUAL resolved as shift (REAL < TK_LEQUAL).
    Conflict between rule 62 and token KW_AND resolved as shift (REAL < KW_AND).
    Conflict between rule 62 and token KW_OR resolved as shift (REAL < KW_OR).


State 162

   63 expr: CONST_STRING expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    '-'        [reduce using rule 63 (expr)]
    '+'        [reduce using rule 63 (expr)]
    TK_POW     [reduce using rule 63 (expr)]
    '*'        [reduce using rule 63 (expr)]
    '/'        [reduce using rule 63 (expr)]
    '%'        [reduce using rule 63 (expr)]
    '<'        [reduce using rule 63 (expr)]
    '>'        [reduce using rule 63 (expr)]
    TK_EQUAL   [reduce using rule 63 (expr)]
    TK_NEQUAL  [reduce using rule 63 (expr)]
    TK_LEQUAL  [reduce using rule 63 (expr)]
    KW_AND     [reduce using rule 63 (expr)]
    KW_OR      [reduce using rule 63 (expr)]
    $default   reduce using rule 63 (expr)


State 163

   60 expr: POS_NUM expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token '-' resolved as reduce ('-' < POS_NUM).
    Conflict between rule 60 and token '+' resolved as reduce ('+' < POS_NUM).
    Conflict between rule 60 and token TK_POW resolved as reduce (TK_POW < POS_NUM).
    Conflict between rule 60 and token '*' resolved as reduce ('*' < POS_NUM).
    Conflict between rule 60 and token '/' resolved as reduce ('/' < POS_NUM).
    Conflict between rule 60 and token '%' resolved as reduce ('%' < POS_NUM).
    Conflict between rule 60 and token '<' resolved as shift (POS_NUM < '<').
    Conflict between rule 60 and token '>' resolved as shift (POS_NUM < '>').
    Conflict between rule 60 and token TK_EQUAL resolved as shift (POS_NUM < TK_EQUAL).
    Conflict between rule 60 and token TK_NEQUAL resolved as shift (POS_NUM < TK_NEQUAL).
    Conflict between rule 60 and token TK_LEQUAL resolved as shift (POS_NUM < TK_LEQUAL).
    Conflict between rule 60 and token KW_AND resolved as shift (POS_NUM < KW_AND).
    Conflict between rule 60 and token KW_OR resolved as shift (POS_NUM < KW_OR).


State 164

   61 expr: NEG_NUM expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token '-' resolved as reduce ('-' < NEG_NUM).
    Conflict between rule 61 and token '+' resolved as reduce ('+' < NEG_NUM).
    Conflict between rule 61 and token TK_POW resolved as reduce (TK_POW < NEG_NUM).
    Conflict between rule 61 and token '*' resolved as reduce ('*' < NEG_NUM).
    Conflict between rule 61 and token '/' resolved as reduce ('/' < NEG_NUM).
    Conflict between rule 61 and token '%' resolved as reduce ('%' < NEG_NUM).
    Conflict between rule 61 and token '<' resolved as shift (NEG_NUM < '<').
    Conflict between rule 61 and token '>' resolved as shift (NEG_NUM < '>').
    Conflict between rule 61 and token TK_EQUAL resolved as shift (NEG_NUM < TK_EQUAL).
    Conflict between rule 61 and token TK_NEQUAL resolved as shift (NEG_NUM < TK_NEQUAL).
    Conflict between rule 61 and token TK_LEQUAL resolved as shift (NEG_NUM < TK_LEQUAL).
    Conflict between rule 61 and token KW_AND resolved as shift (NEG_NUM < KW_AND).
    Conflict between rule 61 and token KW_OR resolved as shift (NEG_NUM < KW_OR).


State 165

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   77     | KW_NOT expr .  [')', ']', ',', ';']
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 77 (expr)

    Conflict between rule 77 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 77 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 77 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 77 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 77 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 77 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 77 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 77 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 77 and token TK_EQUAL resolved as shift (KW_NOT < TK_EQUAL).
    Conflict between rule 77 and token TK_NEQUAL resolved as shift (KW_NOT < TK_NEQUAL).
    Conflict between rule 77 and token TK_LEQUAL resolved as shift (KW_NOT < TK_LEQUAL).
    Conflict between rule 77 and token KW_AND resolved as shift (KW_NOT < KW_AND).
    Conflict between rule 77 and token KW_OR resolved as shift (KW_NOT < KW_OR).


State 166

   64 expr: '(' expr . ')'
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    ')'        shift, and go to state 204
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181


State 167

   65 expr: '[' expr . ']'
   66     | expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    ']'        shift, and go to state 205
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181


State 168

   51 returnStatement: KW_RETURN ';' body .

    $default  reduce using rule 51 (returnStatement)


State 169

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   67     | expr '-' . expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 206


State 170

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   66     | expr '+' . expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 207


State 171

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   71     | expr TK_POW . expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 208


State 172

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   68     | expr '*' . expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 209


State 173

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   69     | expr '/' . expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 210


State 174

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   70     | expr '%' . expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 211


State 175

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   72     | expr '<' . expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 212


State 176

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   73     | expr '>' . expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 213


State 177

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   74     | expr TK_EQUAL . expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 214


State 178

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   75     | expr TK_NEQUAL . expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 215


State 179

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   76     | expr TK_LEQUAL . expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 216


State 180

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   78     | expr KW_AND . expr
   79     | . expr KW_OR expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 217


State 181

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   79     | expr KW_OR . expr

    IDENT         shift, and go to state 127
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr  go to state 218


State 182

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   52                | KW_RETURN expr ';' . body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 219


State 183

   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   90            | ifStatement KW_ELSE '{' . statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT      shift, and go to state 96
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    returnStatement      go to state 105
    statements           go to state 220
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111


State 184

   15 variable_declaration: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition .

    $default  reduce using rule 15 (variable_declaration)


State 185

   33 constant_declaration: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition .

    $default  reduce using rule 33 (constant_declaration)


State 186

    3 start_condition: . variable_declaration
    4                | . constant_declaration
    5                | . function_declaration
    6                | . KW_FUNCTION KW_START '(' ')' ':' KW_VOID '{' body '}'
   11 variable_declaration: . KW_VAR varList ':' types ';'
   12                     | . KW_VAR varList ':' types ',' varList ':' types ';'
   13                     | . KW_VAR varList ':' types ';' start_condition
   14                     | . KW_VAR varList ':' types ',' varList ':' types ';' start_condition
   15                     | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   29 constant_declaration: . KW_CONST constList ':' types ';'
   30                     | . KW_CONST constList ':' types ',' constList ':' types
   31                     | . KW_CONST constList ':' types ';' start_condition
   32                     | . KW_CONST constList ':' types ',' constList ':' types ';' start_condition
   33                     | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' start_condition
   46 function_declaration: . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';'
   46                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' .  [$end]
   47                     | . KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition
   47                     | KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' . start_condition

    KW_VAR       shift, and go to state 1
    KW_CONST     shift, and go to state 2
    KW_FUNCTION  shift, and go to state 3

    $default  reduce using rule 46 (function_declaration)

    start_condition       go to state 221
    variable_declaration  go to state 6
    constant_declaration  go to state 7
    function_declaration  go to state 8


State 187

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr
   81 stmt_expr: IDENT expr .  [')', ',', ';']

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 81 (stmt_expr)


State 188

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
   93 functionCall_parameters: . stmt_expr
   94                        | . stmt_expr ',' functionCall_parameters
   94                        | stmt_expr ',' . functionCall_parameters
   95                        | . %empty  [')']

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    $default  reduce using rule 95 (functionCall_parameters)

    expr                     go to state 147
    stmt_expr                go to state 148
    functionCall_parameters  go to state 222


State 189

   92 functionCall: IDENT '(' functionCall_parameters ')' . ';' body

    ';'  shift, and go to state 223


State 190

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   67     | expr '-' . expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   99 assignmentStatement: IDENT '=' expr '-' . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 206
    functionCall  go to state 224


State 191

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   66     | expr '+' . expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   98 assignmentStatement: IDENT '=' expr '+' . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 207
    functionCall  go to state 225


State 192

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   71     | expr TK_POW . expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
  103 assignmentStatement: IDENT '=' expr TK_POW . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 208
    functionCall  go to state 226


State 193

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   68     | expr '*' . expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
  100 assignmentStatement: IDENT '=' expr '*' . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 209
    functionCall  go to state 227


State 194

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   69     | expr '/' . expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
  101 assignmentStatement: IDENT '=' expr '/' . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 210
    functionCall  go to state 228


State 195

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   70     | expr '%' . expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
  102 assignmentStatement: IDENT '=' expr '%' . functionCall

    IDENT         shift, and go to state 150
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr          go to state 211
    functionCall  go to state 229


State 196

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   96                    | IDENT '=' expr ';' . body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 230


State 197

   19 varList: IDENT '[' POS_NUM . ']'
   28 varsCont: KW_VAR IDENT '[' POS_NUM . ']' '=' CONST_STRING ':' types ';' body

    ']'  shift, and go to state 231


State 198

   26 varsCont: KW_VAR varList ':' types . ';' body
   27         | KW_VAR varList ':' types . ',' varList ':' types ';' body

    ','  shift, and go to state 232
    ';'  shift, and go to state 233


State 199

   38 consts1: IDENT '[' POS_NUM . ']' '=' consts2
   45 constsCont: KW_CONST IDENT '[' POS_NUM . ']' '=' CONST_STRING ':' types ';' body

    ']'  shift, and go to state 234


State 200

   43 constsCont: KW_CONST constList ':' types . ';' body
   44           | KW_CONST constList ':' types . ',' constList ':' types ';' body

    ','  shift, and go to state 235
    ';'  shift, and go to state 236


State 201

   88 ifStatement: KW_IF '(' stmt_expr ')' . '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr ')' . '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    '{'  shift, and go to state 237


State 202

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
  104 forStatement: KW_FOR '(' assignmentStatement ';' . stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr       go to state 147
    stmt_expr  go to state 238


State 203

   91 whileStatement: KW_WHILE '(' stmt_expr ')' . '{' statements '}' ';' body

    '{'  shift, and go to state 239


State 204

   64 expr: '(' expr ')' .

    $default  reduce using rule 64 (expr)


State 205

   65 expr: '[' expr ']' .

    $default  reduce using rule 65 (expr)


State 206

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   67     | expr '-' expr .  [')', ']', ',', ';']
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 67 (expr)

    Conflict between rule 67 and token '-' resolved as shift (%right '-').
    Conflict between rule 67 and token '+' resolved as shift (%right '+').
    Conflict between rule 67 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 67 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 67 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 67 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 67 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 67 and token '>' resolved as shift ('-' < '>').
    Conflict between rule 67 and token TK_EQUAL resolved as shift ('-' < TK_EQUAL).
    Conflict between rule 67 and token TK_NEQUAL resolved as shift ('-' < TK_NEQUAL).
    Conflict between rule 67 and token TK_LEQUAL resolved as shift ('-' < TK_LEQUAL).
    Conflict between rule 67 and token KW_AND resolved as shift ('-' < KW_AND).
    Conflict between rule 67 and token KW_OR resolved as shift ('-' < KW_OR).


State 207

   66 expr: expr . '+' expr
   66     | expr '+' expr .  [')', ']', ',', ';']
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '-'        shift, and go to state 169
    '+'        shift, and go to state 170
    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 66 (expr)

    Conflict between rule 66 and token '-' resolved as shift (%right '-').
    Conflict between rule 66 and token '+' resolved as shift (%right '+').
    Conflict between rule 66 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 66 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 66 and token '<' resolved as shift ('+' < '<').
    Conflict between rule 66 and token '>' resolved as shift ('+' < '>').
    Conflict between rule 66 and token TK_EQUAL resolved as shift ('+' < TK_EQUAL).
    Conflict between rule 66 and token TK_NEQUAL resolved as shift ('+' < TK_NEQUAL).
    Conflict between rule 66 and token TK_LEQUAL resolved as shift ('+' < TK_LEQUAL).
    Conflict between rule 66 and token KW_AND resolved as shift ('+' < KW_AND).
    Conflict between rule 66 and token KW_OR resolved as shift ('+' < KW_OR).


State 208

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   71     | expr TK_POW expr .  ['-', '+', ')', ']', ',', ';']
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    TK_POW     shift, and go to state 171
    '*'        shift, and go to state 172
    '/'        shift, and go to state 173
    '%'        shift, and go to state 174
    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 71 (expr)

    Conflict between rule 71 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 71 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 71 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 71 and token '*' resolved as shift (TK_POW < '*').
    Conflict between rule 71 and token '/' resolved as shift (TK_POW < '/').
    Conflict between rule 71 and token '%' resolved as shift (TK_POW < '%').
    Conflict between rule 71 and token '<' resolved as shift (TK_POW < '<').
    Conflict between rule 71 and token '>' resolved as shift (TK_POW < '>').
    Conflict between rule 71 and token TK_EQUAL resolved as shift (TK_POW < TK_EQUAL).
    Conflict between rule 71 and token TK_NEQUAL resolved as shift (TK_POW < TK_NEQUAL).
    Conflict between rule 71 and token TK_LEQUAL resolved as shift (TK_POW < TK_LEQUAL).
    Conflict between rule 71 and token KW_AND resolved as shift (TK_POW < KW_AND).
    Conflict between rule 71 and token KW_OR resolved as shift (TK_POW < KW_OR).


State 209

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   68     | expr '*' expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 68 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 68 and token TK_POW resolved as reduce (TK_POW < '*').
    Conflict between rule 68 and token '*' resolved as reduce (%left '*').
    Conflict between rule 68 and token '/' resolved as reduce (%left '/').
    Conflict between rule 68 and token '%' resolved as reduce (%left '%').
    Conflict between rule 68 and token '<' resolved as shift ('*' < '<').
    Conflict between rule 68 and token '>' resolved as shift ('*' < '>').
    Conflict between rule 68 and token TK_EQUAL resolved as shift ('*' < TK_EQUAL).
    Conflict between rule 68 and token TK_NEQUAL resolved as shift ('*' < TK_NEQUAL).
    Conflict between rule 68 and token TK_LEQUAL resolved as shift ('*' < TK_LEQUAL).
    Conflict between rule 68 and token KW_AND resolved as shift ('*' < KW_AND).
    Conflict between rule 68 and token KW_OR resolved as shift ('*' < KW_OR).


State 210

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   69     | expr '/' expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 69 (expr)

    Conflict between rule 69 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 69 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 69 and token TK_POW resolved as reduce (TK_POW < '/').
    Conflict between rule 69 and token '*' resolved as reduce (%left '*').
    Conflict between rule 69 and token '/' resolved as reduce (%left '/').
    Conflict between rule 69 and token '%' resolved as reduce (%left '%').
    Conflict between rule 69 and token '<' resolved as shift ('/' < '<').
    Conflict between rule 69 and token '>' resolved as shift ('/' < '>').
    Conflict between rule 69 and token TK_EQUAL resolved as shift ('/' < TK_EQUAL).
    Conflict between rule 69 and token TK_NEQUAL resolved as shift ('/' < TK_NEQUAL).
    Conflict between rule 69 and token TK_LEQUAL resolved as shift ('/' < TK_LEQUAL).
    Conflict between rule 69 and token KW_AND resolved as shift ('/' < KW_AND).
    Conflict between rule 69 and token KW_OR resolved as shift ('/' < KW_OR).


State 211

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   70     | expr '%' expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', ',', ';']
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    '<'        shift, and go to state 175
    '>'        shift, and go to state 176
    TK_EQUAL   shift, and go to state 177
    TK_NEQUAL  shift, and go to state 178
    TK_LEQUAL  shift, and go to state 179
    KW_AND     shift, and go to state 180
    KW_OR      shift, and go to state 181

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 70 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 70 and token TK_POW resolved as reduce (TK_POW < '%').
    Conflict between rule 70 and token '*' resolved as reduce (%left '*').
    Conflict between rule 70 and token '/' resolved as reduce (%left '/').
    Conflict between rule 70 and token '%' resolved as reduce (%left '%').
    Conflict between rule 70 and token '<' resolved as shift ('%' < '<').
    Conflict between rule 70 and token '>' resolved as shift ('%' < '>').
    Conflict between rule 70 and token TK_EQUAL resolved as shift ('%' < TK_EQUAL).
    Conflict between rule 70 and token TK_NEQUAL resolved as shift ('%' < TK_NEQUAL).
    Conflict between rule 70 and token TK_LEQUAL resolved as shift ('%' < TK_LEQUAL).
    Conflict between rule 70 and token KW_AND resolved as shift ('%' < KW_AND).
    Conflict between rule 70 and token KW_OR resolved as shift ('%' < KW_OR).


State 212

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   72     | expr '<' expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, ',', ';']
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    KW_AND  shift, and go to state 180
    KW_OR   shift, and go to state 181

    $default  reduce using rule 72 (expr)

    Conflict between rule 72 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 72 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 72 and token TK_POW resolved as reduce (TK_POW < '<').
    Conflict between rule 72 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 72 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 72 and token '%' resolved as reduce ('%' < '<').
    Conflict between rule 72 and token '<' resolved as reduce (%left '<').
    Conflict between rule 72 and token '>' resolved as reduce (%left '>').
    Conflict between rule 72 and token TK_EQUAL resolved as reduce (%left TK_EQUAL).
    Conflict between rule 72 and token TK_NEQUAL resolved as reduce (%left TK_NEQUAL).
    Conflict between rule 72 and token TK_LEQUAL resolved as reduce (%left TK_LEQUAL).
    Conflict between rule 72 and token KW_AND resolved as shift ('<' < KW_AND).
    Conflict between rule 72 and token KW_OR resolved as shift ('<' < KW_OR).


State 213

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   73     | expr '>' expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, ',', ';']
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    KW_AND  shift, and go to state 180
    KW_OR   shift, and go to state 181

    $default  reduce using rule 73 (expr)

    Conflict between rule 73 and token '-' resolved as reduce ('-' < '>').
    Conflict between rule 73 and token '+' resolved as reduce ('+' < '>').
    Conflict between rule 73 and token TK_POW resolved as reduce (TK_POW < '>').
    Conflict between rule 73 and token '*' resolved as reduce ('*' < '>').
    Conflict between rule 73 and token '/' resolved as reduce ('/' < '>').
    Conflict between rule 73 and token '%' resolved as reduce ('%' < '>').
    Conflict between rule 73 and token '<' resolved as reduce (%left '<').
    Conflict between rule 73 and token '>' resolved as reduce (%left '>').
    Conflict between rule 73 and token TK_EQUAL resolved as reduce (%left TK_EQUAL).
    Conflict between rule 73 and token TK_NEQUAL resolved as reduce (%left TK_NEQUAL).
    Conflict between rule 73 and token TK_LEQUAL resolved as reduce (%left TK_LEQUAL).
    Conflict between rule 73 and token KW_AND resolved as shift ('>' < KW_AND).
    Conflict between rule 73 and token KW_OR resolved as shift ('>' < KW_OR).


State 214

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   74     | expr TK_EQUAL expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, ',', ';']
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    KW_AND  shift, and go to state 180
    KW_OR   shift, and go to state 181

    $default  reduce using rule 74 (expr)

    Conflict between rule 74 and token '-' resolved as reduce ('-' < TK_EQUAL).
    Conflict between rule 74 and token '+' resolved as reduce ('+' < TK_EQUAL).
    Conflict between rule 74 and token TK_POW resolved as reduce (TK_POW < TK_EQUAL).
    Conflict between rule 74 and token '*' resolved as reduce ('*' < TK_EQUAL).
    Conflict between rule 74 and token '/' resolved as reduce ('/' < TK_EQUAL).
    Conflict between rule 74 and token '%' resolved as reduce ('%' < TK_EQUAL).
    Conflict between rule 74 and token '<' resolved as reduce (%left '<').
    Conflict between rule 74 and token '>' resolved as reduce (%left '>').
    Conflict between rule 74 and token TK_EQUAL resolved as reduce (%left TK_EQUAL).
    Conflict between rule 74 and token TK_NEQUAL resolved as reduce (%left TK_NEQUAL).
    Conflict between rule 74 and token TK_LEQUAL resolved as reduce (%left TK_LEQUAL).
    Conflict between rule 74 and token KW_AND resolved as shift (TK_EQUAL < KW_AND).
    Conflict between rule 74 and token KW_OR resolved as shift (TK_EQUAL < KW_OR).


State 215

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   75     | expr TK_NEQUAL expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, ',', ';']
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    KW_AND  shift, and go to state 180
    KW_OR   shift, and go to state 181

    $default  reduce using rule 75 (expr)

    Conflict between rule 75 and token '-' resolved as reduce ('-' < TK_NEQUAL).
    Conflict between rule 75 and token '+' resolved as reduce ('+' < TK_NEQUAL).
    Conflict between rule 75 and token TK_POW resolved as reduce (TK_POW < TK_NEQUAL).
    Conflict between rule 75 and token '*' resolved as reduce ('*' < TK_NEQUAL).
    Conflict between rule 75 and token '/' resolved as reduce ('/' < TK_NEQUAL).
    Conflict between rule 75 and token '%' resolved as reduce ('%' < TK_NEQUAL).
    Conflict between rule 75 and token '<' resolved as reduce (%left '<').
    Conflict between rule 75 and token '>' resolved as reduce (%left '>').
    Conflict between rule 75 and token TK_EQUAL resolved as reduce (%left TK_EQUAL).
    Conflict between rule 75 and token TK_NEQUAL resolved as reduce (%left TK_NEQUAL).
    Conflict between rule 75 and token TK_LEQUAL resolved as reduce (%left TK_LEQUAL).
    Conflict between rule 75 and token KW_AND resolved as shift (TK_NEQUAL < KW_AND).
    Conflict between rule 75 and token KW_OR resolved as shift (TK_NEQUAL < KW_OR).


State 216

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   76     | expr TK_LEQUAL expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, ',', ';']
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr

    KW_AND  shift, and go to state 180
    KW_OR   shift, and go to state 181

    $default  reduce using rule 76 (expr)

    Conflict between rule 76 and token '-' resolved as reduce ('-' < TK_LEQUAL).
    Conflict between rule 76 and token '+' resolved as reduce ('+' < TK_LEQUAL).
    Conflict between rule 76 and token TK_POW resolved as reduce (TK_POW < TK_LEQUAL).
    Conflict between rule 76 and token '*' resolved as reduce ('*' < TK_LEQUAL).
    Conflict between rule 76 and token '/' resolved as reduce ('/' < TK_LEQUAL).
    Conflict between rule 76 and token '%' resolved as reduce ('%' < TK_LEQUAL).
    Conflict between rule 76 and token '<' resolved as reduce (%left '<').
    Conflict between rule 76 and token '>' resolved as reduce (%left '>').
    Conflict between rule 76 and token TK_EQUAL resolved as reduce (%left TK_EQUAL).
    Conflict between rule 76 and token TK_NEQUAL resolved as reduce (%left TK_NEQUAL).
    Conflict between rule 76 and token TK_LEQUAL resolved as reduce (%left TK_LEQUAL).
    Conflict between rule 76 and token KW_AND resolved as shift (TK_LEQUAL < KW_AND).
    Conflict between rule 76 and token KW_OR resolved as shift (TK_LEQUAL < KW_OR).


State 217

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   78     | expr KW_AND expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, ',', ';']
   79     | expr . KW_OR expr

    KW_OR  shift, and go to state 181

    $default  reduce using rule 78 (expr)

    Conflict between rule 78 and token '-' resolved as reduce ('-' < KW_AND).
    Conflict between rule 78 and token '+' resolved as reduce ('+' < KW_AND).
    Conflict between rule 78 and token TK_POW resolved as reduce (TK_POW < KW_AND).
    Conflict between rule 78 and token '*' resolved as reduce ('*' < KW_AND).
    Conflict between rule 78 and token '/' resolved as reduce ('/' < KW_AND).
    Conflict between rule 78 and token '%' resolved as reduce ('%' < KW_AND).
    Conflict between rule 78 and token '<' resolved as reduce ('<' < KW_AND).
    Conflict between rule 78 and token '>' resolved as reduce ('>' < KW_AND).
    Conflict between rule 78 and token TK_EQUAL resolved as reduce (TK_EQUAL < KW_AND).
    Conflict between rule 78 and token TK_NEQUAL resolved as reduce (TK_NEQUAL < KW_AND).
    Conflict between rule 78 and token TK_LEQUAL resolved as reduce (TK_LEQUAL < KW_AND).
    Conflict between rule 78 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 78 and token KW_OR resolved as shift (KW_AND < KW_OR).


State 218

   66 expr: expr . '+' expr
   67     | expr . '-' expr
   68     | expr . '*' expr
   69     | expr . '/' expr
   70     | expr . '%' expr
   71     | expr . TK_POW expr
   72     | expr . '<' expr
   73     | expr . '>' expr
   74     | expr . TK_EQUAL expr
   75     | expr . TK_NEQUAL expr
   76     | expr . TK_LEQUAL expr
   78     | expr . KW_AND expr
   79     | expr . KW_OR expr
   79     | expr KW_OR expr .  ['-', '+', TK_POW, '*', '/', '%', ')', ']', '<', '>', TK_EQUAL, TK_NEQUAL, TK_LEQUAL, KW_AND, KW_OR, ',', ';']

    $default  reduce using rule 79 (expr)

    Conflict between rule 79 and token '-' resolved as reduce ('-' < KW_OR).
    Conflict between rule 79 and token '+' resolved as reduce ('+' < KW_OR).
    Conflict between rule 79 and token TK_POW resolved as reduce (TK_POW < KW_OR).
    Conflict between rule 79 and token '*' resolved as reduce ('*' < KW_OR).
    Conflict between rule 79 and token '/' resolved as reduce ('/' < KW_OR).
    Conflict between rule 79 and token '%' resolved as reduce ('%' < KW_OR).
    Conflict between rule 79 and token '<' resolved as reduce ('<' < KW_OR).
    Conflict between rule 79 and token '>' resolved as reduce ('>' < KW_OR).
    Conflict between rule 79 and token TK_EQUAL resolved as reduce (TK_EQUAL < KW_OR).
    Conflict between rule 79 and token TK_NEQUAL resolved as reduce (TK_NEQUAL < KW_OR).
    Conflict between rule 79 and token TK_LEQUAL resolved as reduce (TK_LEQUAL < KW_OR).
    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < KW_OR).
    Conflict between rule 79 and token KW_OR resolved as reduce (%left KW_OR).


State 219

   52 returnStatement: KW_RETURN expr ';' body .

    $default  reduce using rule 52 (returnStatement)


State 220

   90 ifStatement: ifStatement KW_ELSE '{' statements . '}' ';' body

    '}'  shift, and go to state 240


State 221

   47 function_declaration: KW_FUNCTION IDENT '(' function_parameters ')' ':' types '{' body '}' ';' start_condition .

    $default  reduce using rule 47 (function_declaration)


State 222

   94 functionCall_parameters: stmt_expr ',' functionCall_parameters .

    $default  reduce using rule 94 (functionCall_parameters)


State 223

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   92             | IDENT '(' functionCall_parameters ')' ';' . body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 241


State 224

   99 assignmentStatement: IDENT '=' expr '-' functionCall .

    $default  reduce using rule 99 (assignmentStatement)


State 225

   98 assignmentStatement: IDENT '=' expr '+' functionCall .

    $default  reduce using rule 98 (assignmentStatement)


State 226

  103 assignmentStatement: IDENT '=' expr TK_POW functionCall .

    $default  reduce using rule 103 (assignmentStatement)


State 227

  100 assignmentStatement: IDENT '=' expr '*' functionCall .

    $default  reduce using rule 100 (assignmentStatement)


State 228

  101 assignmentStatement: IDENT '=' expr '/' functionCall .

    $default  reduce using rule 101 (assignmentStatement)


State 229

  102 assignmentStatement: IDENT '=' expr '%' functionCall .

    $default  reduce using rule 102 (assignmentStatement)


State 230

   96 assignmentStatement: IDENT '=' expr ';' body .

    $default  reduce using rule 96 (assignmentStatement)


State 231

   19 varList: IDENT '[' POS_NUM ']' .  [':']
   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' . '=' CONST_STRING ':' types ';' body

    '='  shift, and go to state 242

    $default  reduce using rule 19 (varList)


State 232

   16 varList: . vars1
   17        | . vars1 ',' varList
   18        | . IDENT '[' ']'
   19        | . IDENT '[' POS_NUM ']'
   20 vars1: . IDENT
   21      | . IDENT '=' vars2
   27 varsCont: KW_VAR varList ':' types ',' . varList ':' types ';' body

    IDENT  shift, and go to state 40

    varList  go to state 243
    vars1    go to state 11


State 233

   26 varsCont: . KW_VAR varList ':' types ';' body
   26         | KW_VAR varList ':' types ';' . body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 244


State 234

   38 consts1: IDENT '[' POS_NUM ']' . '=' consts2
   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' . '=' CONST_STRING ':' types ';' body

    '='  shift, and go to state 245


State 235

   34 constList: . consts1
   35          | . consts1 ',' constList
   36 consts1: . IDENT '=' consts2
   37        | . IDENT '[' ']' '=' consts2
   38        | . IDENT '[' POS_NUM ']' '=' consts2
   44 constsCont: KW_CONST constList ':' types ',' . constList ':' types ';' body

    IDENT  shift, and go to state 50

    constList  go to state 246
    consts1    go to state 14


State 236

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   43           | KW_CONST constList ':' types ';' . body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 247


State 237

   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   88            | KW_IF '(' stmt_expr ')' '{' . statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr ')' '{' . statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT      shift, and go to state 96
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    returnStatement      go to state 105
    statements           go to state 248
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111


State 238

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr . ';' assignmentStatement ')' '{' statements '}' ';' body

    ';'  shift, and go to state 249


State 239

   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   91               | KW_WHILE '(' stmt_expr ')' '{' . statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT      shift, and go to state 96
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    returnStatement      go to state 105
    statements           go to state 250
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111


State 240

   90 ifStatement: ifStatement KW_ELSE '{' statements '}' . ';' body

    ';'  shift, and go to state 251


State 241

   92 functionCall: IDENT '(' functionCall_parameters ')' ';' body .

    $default  reduce using rule 92 (functionCall)


State 242

   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' '=' . CONST_STRING ':' types ';' body

    CONST_STRING  shift, and go to state 252


State 243

   27 varsCont: KW_VAR varList ':' types ',' varList . ':' types ';' body

    ':'  shift, and go to state 253


State 244

   26 varsCont: KW_VAR varList ':' types ';' body .

    $default  reduce using rule 26 (varsCont)


State 245

   38 consts1: IDENT '[' POS_NUM ']' '=' . consts2
   39 consts2: . REAL
   40        | . POS_NUM
   41        | . NEG_NUM
   42        | . CONST_STRING
   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' '=' . CONST_STRING ':' types ';' body

    REAL          shift, and go to state 44
    CONST_STRING  shift, and go to state 254
    POS_NUM       shift, and go to state 46
    NEG_NUM       shift, and go to state 47

    consts2  go to state 83


State 246

   44 constsCont: KW_CONST constList ':' types ',' constList . ':' types ';' body

    ':'  shift, and go to state 255


State 247

   43 constsCont: KW_CONST constList ':' types ';' body .

    $default  reduce using rule 43 (constsCont)


State 248

   88 ifStatement: KW_IF '(' stmt_expr ')' '{' statements . '}' ';' body
   89            | KW_IF '(' stmt_expr ')' '{' statements . '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    '}'  shift, and go to state 256


State 249

   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' . assignmentStatement ')' '{' statements '}' ';' body

    IDENT  shift, and go to state 158

    assignmentStatement  go to state 257


State 250

   91 whileStatement: KW_WHILE '(' stmt_expr ')' '{' statements . '}' ';' body

    '}'  shift, and go to state 258


State 251

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   90            | ifStatement KW_ELSE '{' statements '}' ';' . body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 259


State 252

   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING . ':' types ';' body

    ':'  shift, and go to state 260


State 253

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   27 varsCont: KW_VAR varList ':' types ',' varList ':' . types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 261


State 254

   42 consts2: CONST_STRING .  [',', ':']
   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING . ':' types ';' body

    ':'  shift, and go to state 262

    ':'       [reduce using rule 42 (consts2)]
    $default  reduce using rule 42 (consts2)


State 255

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   44 constsCont: KW_CONST constList ':' types ',' constList ':' . types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 263


State 256

   88 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' . ';' body
   89            | KW_IF '(' stmt_expr ')' '{' statements '}' . KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    KW_ELSE  shift, and go to state 264
    ';'      shift, and go to state 265


State 257

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement . ')' '{' statements '}' ';' body

    ')'  shift, and go to state 266


State 258

   91 whileStatement: KW_WHILE '(' stmt_expr ')' '{' statements '}' . ';' body

    ';'  shift, and go to state 267


State 259

   90 ifStatement: ifStatement KW_ELSE '{' statements '}' ';' body .

    $default  reduce using rule 90 (ifStatement)


State 260

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' . types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 268


State 261

   27 varsCont: KW_VAR varList ':' types ',' varList ':' types . ';' body

    ';'  shift, and go to state 269


State 262

    7 types: . KW_NUMBER
    8      | . KW_BOOLEAN
    9      | . KW_VOID
   10      | . KW_STRING
   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' . types ';' body

    KW_NUMBER   shift, and go to state 35
    KW_BOOLEAN  shift, and go to state 36
    KW_STRING   shift, and go to state 37
    KW_VOID     shift, and go to state 38

    types  go to state 270


State 263

   44 constsCont: KW_CONST constList ':' types ',' constList ':' types . ';' body

    ';'  shift, and go to state 271


State 264

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body

    KW_IF  shift, and go to state 272


State 265

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   88            | KW_IF '(' stmt_expr ')' '{' statements '}' ';' . body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 273


State 266

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' . '{' statements '}' ';' body

    '{'  shift, and go to state 274


State 267

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   91               | KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' . body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 275


State 268

   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types . ';' body

    ';'  shift, and go to state 276


State 269

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   27         | KW_VAR varList ':' types ',' varList ':' types ';' . body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 277


State 270

   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types . ';' body

    ';'  shift, and go to state 278


State 271

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   44           | KW_CONST constList ':' types ',' constList ':' types ';' . body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 279


State 272

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF . '(' stmt_expr ')' '{' statements '}' ';' body

    '('  shift, and go to state 280


State 273

   88 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' ';' body .

    $default  reduce using rule 88 (ifStatement)


State 274

   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  104             | KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' . statements '}' ';' body

    IDENT      shift, and go to state 96
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    returnStatement      go to state 105
    statements           go to state 281
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111


State 275

   91 whileStatement: KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body .

    $default  reduce using rule 91 (whileStatement)


State 276

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   28         | KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' . body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 282


State 277

   27 varsCont: KW_VAR varList ':' types ',' varList ':' types ';' body .

    $default  reduce using rule 27 (varsCont)


State 278

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   45           | KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' . body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 283


State 279

   44 constsCont: KW_CONST constList ':' types ',' constList ':' types ';' body .

    $default  reduce using rule 44 (constsCont)


State 280

   53 expr: . POS_NUM
   54     | . REAL
   55     | . IDENT
   56     | . NEG_NUM
   57     | . KW_TRUE
   58     | . KW_FALSE
   59     | . CONST_STRING
   60     | . POS_NUM expr
   61     | . NEG_NUM expr
   62     | . REAL expr
   63     | . CONST_STRING expr
   64     | . '(' expr ')'
   65     | . '[' expr ']'
   66     | . expr '+' expr
   67     | . expr '-' expr
   68     | . expr '*' expr
   69     | . expr '/' expr
   70     | . expr '%' expr
   71     | . expr TK_POW expr
   72     | . expr '<' expr
   73     | . expr '>' expr
   74     | . expr TK_EQUAL expr
   75     | . expr TK_NEQUAL expr
   76     | . expr TK_LEQUAL expr
   77     | . KW_NOT expr
   78     | . expr KW_AND expr
   79     | . expr KW_OR expr
   80 stmt_expr: . expr
   81          | . IDENT expr
   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' . stmt_expr ')' '{' statements '}' ';' body

    IDENT         shift, and go to state 146
    REAL          shift, and go to state 128
    CONST_STRING  shift, and go to state 129
    POS_NUM       shift, and go to state 130
    NEG_NUM       shift, and go to state 131
    KW_TRUE       shift, and go to state 132
    KW_FALSE      shift, and go to state 133
    KW_NOT        shift, and go to state 134
    '('           shift, and go to state 135
    '['           shift, and go to state 136

    expr       go to state 147
    stmt_expr  go to state 284


State 281

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements . '}' ';' body

    '}'  shift, and go to state 285


State 282

   28 varsCont: KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body .

    $default  reduce using rule 28 (varsCont)


State 283

   45 constsCont: KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body .

    $default  reduce using rule 45 (constsCont)


State 284

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr . ')' '{' statements '}' ';' body

    ')'  shift, and go to state 286


State 285

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' . ';' body

    ';'  shift, and go to state 287


State 286

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' . '{' statements '}' ';' body

    '{'  shift, and go to state 288


State 287

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  104             | KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' . body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 289


State 288

   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' . statements '}' ';' body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body

    IDENT      shift, and go to state 96
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    returnStatement      go to state 105
    statements           go to state 290
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111


State 289

  104 forStatement: KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body .

    $default  reduce using rule 104 (forStatement)


State 290

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements . '}' ';' body

    '}'  shift, and go to state 291


State 291

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' . ';' body

    ';'  shift, and go to state 292


State 292

   26 varsCont: . KW_VAR varList ':' types ';' body
   27         | . KW_VAR varList ':' types ',' varList ':' types ';' body
   28         | . KW_VAR IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   43 constsCont: . KW_CONST constList ':' types ';' body
   44           | . KW_CONST constList ':' types ',' constList ':' types ';' body
   45           | . KW_CONST IDENT '[' POS_NUM ']' '=' CONST_STRING ':' types ';' body
   51 returnStatement: . KW_RETURN ';' body
   52                | . KW_RETURN expr ';' body
   82 statements: . ifStatement
   83           | . whileStatement
   84           | . forStatement
   85           | . functionCall
   86           | . assignmentStatement
   87           | . returnStatement
   88 ifStatement: . KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | . KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body
   89            | KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' . body
   90            | . ifStatement KW_ELSE '{' statements '}' ';' body
   91 whileStatement: . KW_WHILE '(' stmt_expr ')' '{' statements '}' ';' body
   92 functionCall: . IDENT '(' functionCall_parameters ')' ';' body
   96 assignmentStatement: . IDENT '=' expr ';' body
   97                    | . IDENT '=' functionCall
   98                    | . IDENT '=' expr '+' functionCall
   99                    | . IDENT '=' expr '-' functionCall
  100                    | . IDENT '=' expr '*' functionCall
  101                    | . IDENT '=' expr '/' functionCall
  102                    | . IDENT '=' expr '%' functionCall
  103                    | . IDENT '=' expr TK_POW functionCall
  104 forStatement: . KW_FOR '(' assignmentStatement ';' stmt_expr ';' assignmentStatement ')' '{' statements '}' ';' body
  105 body: . varsCont
  106     | . constsCont
  107     | . statements
  108     | . %empty  [KW_ELSE, ')', '}', ';']

    IDENT      shift, and go to state 96
    KW_VAR     shift, and go to state 97
    KW_CONST   shift, and go to state 98
    KW_IF      shift, and go to state 99
    KW_FOR     shift, and go to state 100
    KW_WHILE   shift, and go to state 101
    KW_RETURN  shift, and go to state 102

    $default  reduce using rule 108 (body)

    varsCont             go to state 103
    constsCont           go to state 104
    returnStatement      go to state 105
    statements           go to state 106
    ifStatement          go to state 107
    whileStatement       go to state 108
    functionCall         go to state 109
    assignmentStatement  go to state 110
    forStatement         go to state 111
    body                 go to state 293


State 293

   89 ifStatement: KW_IF '(' stmt_expr ')' '{' statements '}' KW_ELSE KW_IF '(' stmt_expr ')' '{' statements '}' ';' body .

    $default  reduce using rule 89 (ifStatement)
